{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","searchField","onChange","handleChange","Persons","persons","filter","person","name","toUpperCase","includes","map","number","onClick","deletePerson","id","PersonForm","onSubmit","addNewName","newName","handleNameChange","newNumber","handleNumberChange","type","notificationStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Notification","message","style","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","setSearchField","setMessage","useEffect","personService","personlist","updateNumber","window","confirm","find","changedPerson","returnedPerson","p","setNotification","nameExists","length","setTimeout","event","target","preventDefault","concat","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebc6705c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {  \r\n    \r\n    return (\r\n        <input\r\n            value={props.searchField}\r\n            onChange={props.handleChange} \r\n        />       \r\n    )      \r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\n\r\nconst Persons = (props) => {  \r\n    return (\r\n        <ul>\r\n        {props.persons\r\n            .filter(person => person.name.toUpperCase().includes(props.searchField.toUpperCase()))\r\n            .map(person => <li key={person.id}>{person.name} {person.number} <button onClick={() => props.deletePerson(person.id)}>delete</button></li>)\r\n        }\r\n      </ul>\r\n    )      \r\n}\r\n\r\nexport default Persons","\r\nimport React from 'react'\r\n\r\nconst PersonForm = (props) => {  \r\n    return (\r\n        <form onSubmit={props.addNewName}>\r\n            <div>\r\n                name: \r\n                <input\r\n                    value={props.newName}\r\n                    onChange={props.handleNameChange} \r\n                />\r\n                number:\r\n                <input\r\n                    value={props.newNumber}\r\n                    onChange={props.handleNumberChange} \r\n                />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst notificationStyle = {\r\n    color: 'green',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  }\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div style={notificationStyle}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n    getAll, \r\n    create, \r\n    update,\r\n    remove  \r\n}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchField, setSearchField] = useState('')\n  const [message, setMessage] = useState(\"\")\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(personlist => {\n        setPersons(personlist)     \n      })\n  }, [])  \n\n\n  const addNewName = (event) => {\n    event.preventDefault()\n    const person = {\n      name: newName,\n      number: newNumber\n    }\n    nameExists(newName) ? \n      updateNumber(person.name, person.number) : personService\n          .create (person)\n          .then(p => {\n            setPersons(persons.concat(p))\n            setNotification(`Added ${person.name}`)\n          })\n          .catch(error=> {\n            setNotification(error.response.data.error)\n          })\n    setNewName('')\n    setNewNumber('')  \n  }\n\n  const updateNumber = (name, number) => {\n    if (window.confirm(`${name} is already added to phonebook, replace the old number with a new one?`)) { \n      const person = persons.find(person => person.name === name)\n      const changedPerson = { ...person, number: number}  \n      personService\n        .update(person.id, changedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\n          setNotification(`Updated ${person.name}'s number`)\n        })    \n    }  \n  }\n\n  const nameExists = (name) => {\n    return persons.filter(person => name === person.name).length > 0\n  }\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleChange = (event) => {\n    setSearchField(event.target.value)\n  } \n\n  const setNotification = (message) => {\n    setMessage(message)\n    setTimeout(() => {          \n      setMessage(null)\n    }, 2000)\n  }\n\n  const deletePerson = (id) => {\n    const person = persons.find(person => person.id === id)\n    if (window.confirm(`Delete ${person.name}?`)) { \n      personService\n      .remove(id)\n      .then(() => {\n        setPersons(persons.filter(person => person.id !== id))\n        setNotification(`Deleted ${person.name}`)\n      })\n    }  \n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      filter shown with:\n      <Filter\n        searchField={searchField}\n        handleChange={handleChange} \n      />\n      <PersonForm \n        addNewName={addNewName}\n        handleNameChange={handleNameChange} \n        handleNumberChange={handleNumberChange} \n        newName={newName} \n        newNumber={newNumber}/>\n      <h2>Numbers</h2>\n      <Persons persons={persons} searchField={searchField} deletePerson={deletePerson} />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}